(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[29],{"9kvl":function(e,n,r){"use strict";r.d(n,"a",(function(){return t["b"]}));var t=r("FfOG");r("bCY9"),r("Fghh"),r("k1fw"),r("qVdP"),r("jsC+"),r("0Owb"),r("PpiC"),r("q1tI")},afA6:function(e,n,r){"use strict";r.r(n);var t=r("0Owb"),a=r("q1tI"),i=r.n(a),o=r("q3YX"),s=r("qLMh"),d=r("9og8"),l=r("LtsZ"),c="import React, { useState } from 'react';\r\nimport { CountdownButton } from 'ant-design-power';\r\n\r\nfunction CountdownButtonDemo() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const getCode = async () => {\r\n    setLoading(true);\r\n    try {\r\n      return await new Promise((resolve) =>\r\n        setTimeout(() => {\r\n          resolve(123);\r\n        }, 1000),\r\n      );\r\n    } catch (err) {\r\n      throw new Error('failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CountdownButton\r\n      loading={loading}\r\n      onClick={async (completeCallback) => {\r\n        const code = await getCode();\r\n        console.log(`\u9a8c\u8bc1\u7801\uff1a${code}`);\r\n        completeCallback();\r\n      }}\r\n    >\r\n      \u83b7\u53d6\u9a8c\u8bc1\u7801\r\n    </CountdownButton>\r\n  );\r\n}\r\n\r\nexport default CountdownButtonDemo;",p="import React, { useState } from 'react';\r\nimport { EditableTag } from 'ant-design-power';\r\n\r\nfunction EditableTagDemo() {\r\n  const [tags, setTags] = useState(['\u5317\u4eac', '\u4e0a\u6d77', '\u5e7f\u5dde', '\u6df1\u5733']);\r\n\r\n  return (\r\n    <div>\r\n      <EditableTag\r\n        value={tags}\r\n        onChange={(tags) => {\r\n          console.log(tags);\r\n          setTags(tags);\r\n        }}\r\n      ></EditableTag>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableTagDemo;",u="import React, { useState } from 'react';\r\nimport { Form, Button, message } from 'antd';\r\nimport { EditableTag } from 'ant-design-power';\r\n\r\nfunction EditableTagFormDemo() {\r\n  return (\r\n    <div>\r\n      <Form\r\n        onFinish={(values) => {\r\n          console.log(values);\r\n          message.info(JSON.stringify(values));\r\n        }}\r\n      >\r\n        <Form.Item label=\"\u6807\u7b7e\" name=\"tag\" initialValue={['\u5317\u4eac']}>\r\n          <EditableTag></EditableTag>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            \u63d0\u4ea4\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableTagFormDemo;",m="import React from 'react';\r\nimport { message } from 'antd';\r\nimport { EditableTree } from 'ant-design-power';\r\n\r\nconst treeData = [\r\n  {\r\n    title: 'parent 1',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: 'parent 1-0',\r\n        key: '0-0-0',\r\n        children: [\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-0',\r\n          },\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-1',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction EditableTreeDemo() {\r\n  return (\r\n    <div>\r\n      <EditableTree\r\n        defaultExpandAll\r\n        treeData={treeData}\r\n        treeEditingMethod={{\r\n          addItem(nodeInfo) {\r\n            message.info(`add\uff1a${JSON.stringify(nodeInfo)}`);\r\n          },\r\n          editItem(nodeInfo) {\r\n            message.info(`edit\uff1a${JSON.stringify(nodeInfo)}`);\r\n          },\r\n          deleteItem(nodeInfo) {\r\n            message.info(`delete\uff1a${JSON.stringify(nodeInfo)}`);\r\n          },\r\n        }}\r\n      ></EditableTree>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableTreeDemo;",f="import React from 'react';\r\nimport { message, Menu } from 'antd';\r\nimport { MinusCircleOutlined } from '@ant-design/icons';\r\nimport { EditableTree } from 'ant-design-power';\r\n\r\nconst treeData = [\r\n  {\r\n    title: 'parent 1',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: 'parent 1-0',\r\n        key: '0-0-0',\r\n        children: [\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-0',\r\n          },\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-1',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction EditableTreeDemo() {\r\n  return (\r\n    <div>\r\n      <EditableTree\r\n        defaultExpandAll\r\n        treeData={treeData}\r\n        treeEditingMethod={{\r\n          addItem(nodeInfo) {\r\n            message.info(`add\uff1a${JSON.stringify(nodeInfo)}`);\r\n          },\r\n          editItem(nodeInfo) {\r\n            message.info(`edit\uff1a${JSON.stringify(nodeInfo)}`);\r\n          },\r\n          deleteItem(nodeInfo) {\r\n            message.info(`delete\uff1a${JSON.stringify(nodeInfo)}`);\r\n          },\r\n        }}\r\n        renderRightClickMenuItem={(menu, nodeInfo, treeEditingMethod) => {\r\n          const [addNode, editNode] = menu;\r\n          return (\r\n            <>\r\n              {addNode}\r\n              {editNode}\r\n              <Menu.Item\r\n                key=\"delete\"\r\n                danger\r\n                icon={<MinusCircleOutlined />}\r\n                onClick={() => {\r\n                  const { deleteItem } = treeEditingMethod;\r\n                  deleteItem && deleteItem(nodeInfo);\r\n                }}\r\n              >\r\n                \u79fb\u9664\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"custom\"\r\n                onClick={() => {\r\n                  message.info(`custom\uff1a${JSON.stringify(nodeInfo)}`);\r\n                }}\r\n              >\r\n                \u81ea\u5b9a\u4e49\u83dc\u5355\u9879\r\n              </Menu.Item>\r\n            </>\r\n          );\r\n        }}\r\n      ></EditableTree>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableTreeDemo;",g="import React, { useState } from 'react';\r\nimport { Form, Input, Modal } from 'antd';\r\nimport { EditableTree, ModalForm } from 'ant-design-power';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport { DataNodeType } from '..';\r\n\r\nconst data = [\r\n  {\r\n    title: 'parent 1',\r\n    key: '0-0',\r\n    icon: <EditOutlined />,\r\n    children: [\r\n      {\r\n        title: 'parent 1-0',\r\n        key: '0-0-0',\r\n        icon: <EditOutlined />,\r\n        children: [\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-0',\r\n            icon: <EditOutlined />,\r\n          },\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-1',\r\n            icon: <EditOutlined />,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction EditableTreeDemo() {\r\n  const [treeData, setTreeData] = useState<DataNodeType[]>(data);\r\n  const [modalArgs, setModalArgs] = useState<{\r\n    visible: boolean;\r\n    data?: {\r\n      id?: string;\r\n      title?: string;\r\n      parentId?: string;\r\n    };\r\n  }>({\r\n    visible: false,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <EditableTree\r\n        defaultExpandAll\r\n        treeData={treeData}\r\n        treeEditingMethod={{\r\n          addItem(nodeInfo) {\r\n            const { key } = nodeInfo;\r\n            setModalArgs({\r\n              visible: true,\r\n              data: {\r\n                parentId: key as string,\r\n              },\r\n            });\r\n          },\r\n          editItem(nodeInfo) {\r\n            const { key, title } = nodeInfo;\r\n            setModalArgs({\r\n              visible: true,\r\n              data: {\r\n                id: key as string,\r\n                title: title as string,\r\n              },\r\n            });\r\n          },\r\n          deleteItem(nodeInfo) {\r\n            const { key, title } = nodeInfo;\r\n            Modal.confirm({\r\n              title: '\u5220\u9664',\r\n              content: `\u786e\u5b9a\u5220\u9664 ${title} \u5417\uff1f`,\r\n              onOk() {\r\n                const data = EditableTree.deleteTreeNode(treeData, key);\r\n                setTreeData(data);\r\n              },\r\n            });\r\n          },\r\n        }}\r\n      ></EditableTree>\r\n      <ModalForm\r\n        title={modalArgs.data ? '\u4fee\u6539' : '\u6dfb\u52a0'}\r\n        visible={modalArgs.visible}\r\n        initialValue={modalArgs.data}\r\n        onClose={() => {\r\n          setModalArgs({ visible: false, data: {} });\r\n        }}\r\n        onSubmit={async (values, isEdit) => {\r\n          if (isEdit) {\r\n            const data = EditableTree.updateTreeNode(\r\n              treeData,\r\n              values.id!,\r\n              (node) => {\r\n                return {\r\n                  ...node,\r\n                  title: values.title,\r\n                };\r\n              },\r\n            );\r\n            setTreeData(data);\r\n          } else {\r\n            const data = EditableTree.updateTreeNode(\r\n              treeData,\r\n              modalArgs.data?.parentId!,\r\n              (node) => {\r\n                const val = {\r\n                  title: values.title,\r\n                  key: `${node.key}-${(node.children || []).length}`,\r\n                };\r\n                return {\r\n                  ...node,\r\n                  children: (node.children || []).length\r\n                    ? [...node.children!, val]\r\n                    : [val],\r\n                };\r\n              },\r\n            );\r\n            setTreeData(data);\r\n          }\r\n          return true;\r\n        }}\r\n      >\r\n        <Form.Item label=\"\u540d\u79f0\" name=\"title\">\r\n          <Input></Input>\r\n        </Form.Item>\r\n      </ModalForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableTreeDemo;",b="import React, { ReactNode, useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { ModalDetail } from 'ant-design-power';\r\n\r\nfunction ModalDetailDemo() {\r\n  const [listItemDetailArgs, setListItemDetailArgs] = useState<{\r\n    visible: boolean;\r\n    data: { label: string; value?: string | ReactNode }[];\r\n  }>({\r\n    visible: false,\r\n    data: [],\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          setListItemDetailArgs({\r\n            visible: true,\r\n            data: [\r\n              { label: '\u59d3\u540d', value: '\u5f20\u4e09' },\r\n              { label: '\u8054\u7cfb\u7535\u8bdd', value: '13312341234' },\r\n              { label: '\u7528\u6237\u7c7b\u578b', value: '\u666e\u901a\u7528\u6237' },\r\n            ],\r\n          });\r\n        }}\r\n      >\r\n        \u67e5\u770b\u8be6\u60c5\r\n      </Button>\r\n      <ModalDetail\r\n        title=\"\u8be6\u60c5\"\r\n        visible={listItemDetailArgs.visible}\r\n        data={listItemDetailArgs.data}\r\n        onClose={() => setListItemDetailArgs({ visible: false, data: [] })}\r\n      ></ModalDetail>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalDetailDemo;",v="import React, { useState } from 'react';\r\nimport { Button, Space, Form, Input, Select, InputNumber, message } from 'antd';\r\nimport { ModalForm } from 'ant-design-power';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction ModalFormDemo() {\r\n  type DataType = { id?: string; name?: string; gender?: string; age?: number };\r\n  const [dataFormArgs, setDataFormArgs] = useState<{\r\n    visible: boolean;\r\n    data: DataType;\r\n  }>({\r\n    visible: false,\r\n    data: {},\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setDataFormArgs({\r\n              visible: true,\r\n              data: {},\r\n            });\r\n          }}\r\n        >\r\n          \u6dfb\u52a0\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setDataFormArgs({\r\n              visible: true,\r\n              data: { id: '1', name: '\u5f20\u4e09', gender: '\u7537', age: 25 },\r\n            });\r\n          }}\r\n        >\r\n          \u4fee\u6539\r\n        </Button>\r\n      </Space>\r\n\r\n      <ModalForm<DataType>\r\n        title={Object.keys(dataFormArgs.data).length ? '\u4fee\u6539' : '\u6dfb\u52a0'}\r\n        visible={dataFormArgs.visible}\r\n        initialValue={dataFormArgs.data}\r\n        onClose={() => {\r\n          setDataFormArgs({ visible: false, data: {} });\r\n        }}\r\n        onSubmit={async (values, isEdit) => {\r\n          message.info(`${JSON.stringify(values)} ${isEdit}`);\r\n          return true;\r\n        }}\r\n        onValuesChange={(value, _, form) => {\r\n          console.log(value, _, form);\r\n          if (value.gender && value.gender === '\u7537') {\r\n            form.setFieldsValue({ age: 20 });\r\n          }\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"\u59d3\u540d\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: '\u8bf7\u8f93\u5165' }]}\r\n        >\r\n          <Input></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"\u6027\u522b\" name=\"gender\">\r\n          <Select>\r\n            {['\u7537', '\u5973'].map((item) => (\r\n              <Option value={item} key={item}>\r\n                {item}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"\u5e74\u9f84\" name=\"age\">\r\n          <InputNumber min={0} max={100} />\r\n        </Form.Item>\r\n      </ModalForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalFormDemo;",y="import React, { useState } from 'react';\r\nimport { QuickRangePicker } from 'ant-design-power';\r\nimport type { RangePickerProps } from 'antd/es/date-picker/generatePicker';\r\nimport moment from 'moment';\r\n\r\ntype RangePickerValue = RangePickerProps<moment.Moment>['value'];\r\n\r\nfunction QuickRangePickerDemo() {\r\n  const [date, setDate] = useState<RangePickerValue>();\r\n  return (\r\n    <div>\r\n      <QuickRangePicker\r\n        presetTimeRange={{\r\n          \u8fd11\u6708: [moment().subtract(1, 'months'), moment()],\r\n          \u8fd16\u6708: [moment().subtract(6, 'months'), moment()],\r\n          \u8fd11\u5e74: [moment().subtract(1, 'years'), moment()],\r\n        }}\r\n        defaultPresetTime=\"\u8fd11\u6708\"\r\n        value={date}\r\n        onChange={(date: RangePickerValue) => {\r\n          console.log(date);\r\n          setDate(date);\r\n        }}\r\n      ></QuickRangePicker>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuickRangePickerDemo;",h="import React, { useState } from 'react';\r\nimport { Button, Tag, Space } from 'antd';\r\nimport { ReactiveTable } from 'ant-design-power';\r\n\r\nconst dataSource = [...new Array(100)].map((_, index) => ({\r\n  id: index + 1,\r\n  username: `\u7528\u6237${index + 1}`,\r\n  type: '\u7ba1\u7406\u5458',\r\n  status: 1,\r\n}));\r\n\r\nfunction ReactiveTableDemo() {\r\n  const [displayType, setDisplayType] = useState<'table' | 'list'>('table');\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setDisplayType((d) => {\r\n            if (d === 'list') return 'table';\r\n            return 'list';\r\n          });\r\n        }}\r\n      >\r\n        \u5207\u6362\u663e\u793a\u6a21\u5f0f\r\n      </Button>\r\n      <div style={{ paddingTop: 10 }}>\r\n        <ReactiveTable\r\n          type={displayType}\r\n          fields={[\r\n            {\r\n              title: '\u7528\u6237\u540d',\r\n              dataIndex: 'username',\r\n              type: 'title',\r\n            },\r\n            {\r\n              title: '\u7c7b\u578b',\r\n              dataIndex: 'type',\r\n            },\r\n            {\r\n              title: '\u72b6\u6001',\r\n              dataIndex: 'status',\r\n              render: (status) =>\r\n                status === 1 ? (\r\n                  <Tag color=\"green\">\u542f\u7528</Tag>\r\n                ) : (\r\n                  <Tag color=\"red\">\u7981\u7528</Tag>\r\n                ),\r\n            },\r\n            {\r\n              title: '\u64cd\u4f5c',\r\n              dataIndex: 'action',\r\n              type: 'action',\r\n              render: () => (\r\n                <Space>\r\n                  <a>\u4fee\u6539</a>\r\n                </Space>\r\n              ),\r\n            },\r\n          ]}\r\n          commonProps={{\r\n            rowKey: 'id',\r\n            dataSource,\r\n            pagination: {},\r\n          }}\r\n        ></ReactiveTable>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactiveTableDemo;",T="import React, { useState, useEffect } from 'react';\r\nimport { Button, Tag, Space } from 'antd';\r\nimport { ReactiveTable } from 'ant-design-power';\r\n\r\ntype DataSourceType = {\r\n  id: number;\r\n  username: string;\r\n  type: string;\r\n  status: number;\r\n}[];\r\nconst dataSource: DataSourceType = [...new Array(100)].map((_, index) => ({\r\n  id: index + 1,\r\n  username: `\u7528\u6237${index + 1}`,\r\n  type: '\u7ba1\u7406\u5458',\r\n  status: 1,\r\n}));\r\nfunction getDataSource(page: number, pageSize: number = 10) {\r\n  return dataSource.slice((page - 1) * pageSize, page * pageSize);\r\n}\r\n\r\nfunction InfiniteScrollDemo() {\r\n  const [displayType, setDisplayType] = useState<'table' | 'list'>('list');\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [displayType]);\r\n\r\n  const [list, setList] = useState<DataSourceType>([]);\r\n  const [page, setPage] = useState(1);\r\n  useEffect(() => {\r\n    const data = getDataSource(page);\r\n    if (displayType === 'list') {\r\n      if (list.length && page === 1) {\r\n        setList(data);\r\n        const scrollableDivElm = document.getElementById('scrollableDiv');\r\n        if (scrollableDivElm) {\r\n          scrollableDivElm.scrollTop = 0;\r\n        }\r\n      } else {\r\n        setList((d) => [...d, ...data]);\r\n      }\r\n    } else {\r\n      setList(data);\r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setDisplayType((d) => {\r\n              if (d === 'list') return 'table';\r\n              return 'list';\r\n            });\r\n          }}\r\n        >\r\n          \u5207\u6362\u663e\u793a\u6a21\u5f0f\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setPage(1);\r\n          }}\r\n        >\r\n          \u91cd\u7f6e\r\n        </Button>\r\n      </Space>\r\n      <div style={{ paddingTop: 10 }}>\r\n        <ReactiveTable\r\n          type={displayType}\r\n          infiniteScroll={{\r\n            dataLength: list.length,\r\n            next: () => {\r\n              setPage((p) => p + 1);\r\n            },\r\n            hasMore: list.length < dataSource.length,\r\n            loader: <div style={{ textAlign: 'center' }}>\u52a0\u8f7d\u4e2d...</div>,\r\n            endMessage: <div style={{ textAlign: 'center' }}>\u52a0\u8f7d\u5b8c\u6bd5</div>,\r\n          }}\r\n          scrollableDivHeight=\"calc(100vh - 92px - 22px)\"\r\n          fields={[\r\n            {\r\n              title: '\u7528\u6237\u540d',\r\n              dataIndex: 'username',\r\n              type: 'title',\r\n            },\r\n            {\r\n              title: '\u7c7b\u578b',\r\n              dataIndex: 'type',\r\n            },\r\n            {\r\n              title: '\u72b6\u6001',\r\n              dataIndex: 'status',\r\n              render: (status) =>\r\n                status === 1 ? (\r\n                  <Tag color=\"green\">\u542f\u7528</Tag>\r\n                ) : (\r\n                  <Tag color=\"red\">\u7981\u7528</Tag>\r\n                ),\r\n            },\r\n            {\r\n              title: '\u64cd\u4f5c',\r\n              dataIndex: 'action',\r\n              type: 'action',\r\n              render: () => (\r\n                <Space>\r\n                  <a>\u4fee\u6539</a>\r\n                </Space>\r\n              ),\r\n            },\r\n          ]}\r\n          commonProps={{\r\n            rowKey: 'id',\r\n            dataSource: list,\r\n          }}\r\n          tableProps={{\r\n            pagination: {\r\n              total: dataSource.length,\r\n              current: page,\r\n              defaultPageSize: 10,\r\n              showSizeChanger: false,\r\n              onChange: (page) => {\r\n                setPage(page);\r\n              },\r\n            },\r\n          }}\r\n        ></ReactiveTable>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfiniteScrollDemo;",w="import React from 'react';\r\nimport { ReactiveTable } from 'ant-design-power';\r\n\r\nconst data = [\r\n  {\r\n    id: '1',\r\n    net_profit_parent: '1.14\u4ebf',\r\n    net_profit_parent_gr: '-0.523%',\r\n    non_net_profit_deduction: '7807.03\u4e07',\r\n    non_net_profit_deduction_gr: '-13.86%',\r\n    total_operating_income: '94.44\u4ebf',\r\n    total_operating_income_gr: '28.70%',\r\n    date: '2022-03-31',\r\n  },\r\n  {\r\n    id: '2',\r\n    net_profit_parent: '1.14\u4ebf',\r\n    net_profit_parent_gr: '-0.523%',\r\n    non_net_profit_deduction: '7807.03\u4e07',\r\n    non_net_profit_deduction_gr: '-13.86%',\r\n    total_operating_income: '94.44\u4ebf',\r\n    total_operating_income_gr: '28.70%',\r\n    date: '2021-12-31',\r\n  },\r\n  {\r\n    id: '3',\r\n    net_profit_parent: '1.14\u4ebf',\r\n    net_profit_parent_gr: '-0.523%',\r\n    non_net_profit_deduction: '7807.03\u4e07',\r\n    non_net_profit_deduction_gr: '-13.86%',\r\n    total_operating_income: '94.44\u4ebf',\r\n    total_operating_income_gr: '28.70%',\r\n    date: '2021-09-30',\r\n  },\r\n  {\r\n    id: '4',\r\n    net_profit_parent: '1.14\u4ebf',\r\n    net_profit_parent_gr: '-0.523%',\r\n    non_net_profit_deduction: '7807.03\u4e07',\r\n    non_net_profit_deduction_gr: '-13.86%',\r\n    total_operating_income: '94.44\u4ebf',\r\n    total_operating_income_gr: '28.70%',\r\n    date: '2021-06-30',\r\n  },\r\n];\r\n\r\nfunction VerticalTableDemo() {\r\n  return (\r\n    <div>\r\n      <div style={{ paddingTop: 10 }}>\r\n        <ReactiveTable\r\n          type=\"table\"\r\n          verticalTableLayoutConf={{\r\n            mainFieldName: 'date',\r\n            firstCol: {\r\n              title: '\u79d1\u76ee/\u5e74\u5ea6',\r\n              dataIndex: 'subject',\r\n              fixed: 'left',\r\n            },\r\n          }}\r\n          fields={[\r\n            {\r\n              title: '\u65e5\u671f',\r\n              dataIndex: 'date',\r\n              render: (text) => text || '-',\r\n              type: 'title',\r\n            },\r\n            {\r\n              title: '\u5f52\u6bcd\u51c0\u5229\u6da6(\u5143)',\r\n              dataIndex: 'net_profit_parent',\r\n            },\r\n            {\r\n              title: '\u5f52\u6bcd\u51c0\u5229\u6da6\u540c\u6bd4\u589e\u957f\u7387',\r\n              dataIndex: 'net_profit_parent_gr',\r\n            },\r\n            {\r\n              title: '\u6263\u975e\u51c0\u5229\u6da6(\u5143)',\r\n              dataIndex: 'non_net_profit_deduction',\r\n            },\r\n            {\r\n              title: '\u6263\u975e\u51c0\u5229\u6da6\u540c\u6bd4\u589e\u957f\u7387',\r\n              dataIndex: 'non_net_profit_deduction_gr',\r\n            },\r\n            {\r\n              title: '\u8425\u4e1a\u603b\u6536\u5165(\u5143)',\r\n              dataIndex: 'total_operating_income',\r\n            },\r\n            {\r\n              title: '\u8425\u4e1a\u603b\u6536\u5165\u540c\u6bd4\u589e\u957f\u7387',\r\n              dataIndex: 'total_operating_income_gr',\r\n            },\r\n          ]}\r\n          commonProps={{\r\n            dataSource: data,\r\n            rowKey: 'id',\r\n          }}\r\n          tableProps={{\r\n            scroll: { x: 'max-content' },\r\n            pagination: false,\r\n          }}\r\n        ></ReactiveTable>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerticalTableDemo;",x="import React, { useState } from 'react';\r\nimport { TagSelector } from 'ant-design-power';\r\n\r\nfunction TagSelectorDemo() {\r\n  const options = [\r\n    { label: '\u5317\u4eac', value: 'Beijing' },\r\n    { label: '\u4e0a\u6d77', value: 'Shanghai' },\r\n    { label: '\u5e7f\u5dde', value: 'Guangzhou' },\r\n    { label: '\u6df1\u5733', value: 'Shenzhen' },\r\n  ];\r\n  const [selectedVal, setSelectedVal] = useState<string>('Beijing');\r\n\r\n  return (\r\n    <TagSelector\r\n      type=\"radio\"\r\n      tags={options}\r\n      value={selectedVal}\r\n      onChange={(val) => {\r\n        setSelectedVal(val);\r\n      }}\r\n    ></TagSelector>\r\n  );\r\n}\r\n\r\nexport default TagSelectorDemo;",I="import React, { useState } from 'react';\r\nimport { TagSelector } from 'ant-design-power';\r\n\r\nfunction TagSelectorCheckboxDemo() {\r\n  const options: { label: string; value: string }[] = [];\r\n  Array.from(new Array(100)).forEach((_, idx) => {\r\n    options.push({ label: `\u9009\u9879${idx + 1}`, value: `${idx + 1}` });\r\n  });\r\n\r\n  const [selectedVal, setSelectedVal] = useState<string[]>(['all']);\r\n\r\n  return (\r\n    <TagSelector\r\n      tags={options}\r\n      value={selectedVal}\r\n      displayMaxOptionLength={20}\r\n      showAll\r\n      onChange={(val) => {\r\n        setSelectedVal(val);\r\n      }}\r\n    ></TagSelector>\r\n  );\r\n}\r\n\r\nexport default TagSelectorCheckboxDemo;",S='import React from \'react\';\r\nimport { Form, Button, message } from \'antd\';\r\nimport { TagSelector } from \'ant-design-power\';\r\n\r\nfunction TagSelectorFormDemo() {\r\n  const options: { label: string; value: string }[] = [];\r\n  Array.from(new Array(100)).forEach((_, idx) => {\r\n    options.push({ label: `\u9009\u9879${idx + 1}`, value: `${idx + 1}` });\r\n  });\r\n\r\n  return (\r\n    <Form\r\n      onFinish={(values) => {\r\n        message.info(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item label="\u9009\u9879" name="option">\r\n        <TagSelector tags={options}></TagSelector>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type="primary" htmlType="submit">\r\n          \u63d0\u4ea4\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default TagSelectorFormDemo;',D="import React, { useState } from 'react';\r\nimport { Button, Space, Form, Input, message } from 'antd';\r\nimport { ModalForm, UploadInForm } from 'ant-design-power';\r\n\r\nfunction UploadInFormDemo() {\r\n  type DataType = {\r\n    name?: string;\r\n    attachments?: { name: string; url: string }[];\r\n  };\r\n  const [dataFormArgs, setDataFormArgs] = useState<{\r\n    visible: boolean;\r\n    data: DataType;\r\n  }>({\r\n    visible: false,\r\n    data: {},\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setDataFormArgs({\r\n              visible: true,\r\n              data: {},\r\n            });\r\n          }}\r\n        >\r\n          \u6dfb\u52a0\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setDataFormArgs({\r\n              visible: true,\r\n              data: {\r\n                name: '\u5f20\u4e09',\r\n                attachments: [\r\n                  {\r\n                    name: '\u9644\u4ef61',\r\n                    url: 'https://www.runoob.com/images/pulpit.jpg',\r\n                  },\r\n                ],\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          \u4fee\u6539\r\n        </Button>\r\n      </Space>\r\n\r\n      <ModalForm<DataType>\r\n        title={Object.keys(dataFormArgs.data).length ? '\u4fee\u6539' : '\u6dfb\u52a0'}\r\n        visible={dataFormArgs.visible}\r\n        initialValue={dataFormArgs.data}\r\n        onClose={() => {\r\n          setDataFormArgs({ visible: false, data: {} });\r\n        }}\r\n        onSubmit={async (values, isEdit) => {\r\n          console.log(values);\r\n          message.info(`${JSON.stringify(values)} ${isEdit}`);\r\n          return true;\r\n        }}\r\n      >\r\n        <Form.Item label=\"\u59d3\u540d\" name=\"name\">\r\n          <Input></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"\u9644\u4ef6\" name=\"attachments\">\r\n          <UploadInForm\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            multiple\r\n            transform={(fileList, info) => {\r\n              console.log('transform \u6267\u884c', info.file);\r\n              const result = fileList.map((item) => {\r\n                const { response, ...rest } = item;\r\n                if (response) {\r\n                  // \u5904\u7406\u54cd\u5e94\uff0c\u83b7\u53d6\u7ed3\u679c\u3002\r\n                  const { url } = response;\r\n                  return {\r\n                    url,\r\n                    ...rest,\r\n                  };\r\n                }\r\n                return item;\r\n              });\r\n              return result;\r\n            }}\r\n          ></UploadInForm>\r\n        </Form.Item>\r\n      </ModalForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadInFormDemo;",_={"countdownbutton-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(21)]).then(r.bind(null,"WFta"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:c}},dependencies:{react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},antd:{version:"^4.0.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},componentName:"CountdownButton",identifier:"countdownbutton-demos"}},"editabletag-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(17)]).then(r.bind(null,"Mh6g"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:p}},dependencies:{react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},antd:{version:"^4.0.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},componentName:"EditableTag",identifier:"editabletag-demos"}},"editabletag-form":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(17)]).then(r.bind(null,"ORA6"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:u}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"EditableTag",identifier:"editabletag-form"}},"editabletree-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(15)]).then(r.bind(null,"5gJ/"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:m}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"EditableTree",identifier:"editabletree-demos"}},"editabletree-custom":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(15)]).then(r.bind(null,"qRDE"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:f}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"@ant-design/icons":{version:"4.7.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"EditableTree",identifier:"editabletree-custom"}},"editabletree-modal":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(15)]).then(r.bind(null,"UaH+"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:g}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.0.0"},"ant-design-power":{version:"1.4.3"},"@ant-design/icons":{version:"4.7.0"},"react-dom":{version:">=16.0.0"}},componentName:"EditableTree",identifier:"editabletree-modal"}},"modaldetail-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(18)]).then(r.bind(null,"ZQXb"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:b}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"ModalDetail",identifier:"modaldetail-demos"}},"modalform-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(27),r.e(4),r.e(19)]).then(r.bind(null,"CihV"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:v}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"ModalForm",identifier:"modalform-demos"}},"quickrangepicker-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(22)]).then(r.bind(null,"3uH6"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:y}},dependencies:{react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},moment:{version:"2.29.4"},antd:{version:"^4.0.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},componentName:"QuickRangePicker",identifier:"quickrangepicker-demos"}},"reactivetable-demos":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(16)]).then(r.bind(null,"/Ju5"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:h}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"ReactiveTable",identifier:"reactivetable-demos"}},"reactivetable-infinitescroll":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(16)]).then(r.bind(null,"zYDu"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:T}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"ReactiveTable",identifier:"reactivetable-infinitescroll"}},"reactivetable-verticaltable":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(16)]).then(r.bind(null,"N5XS"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:w}},dependencies:{react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},antd:{version:"^4.0.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},componentName:"ReactiveTable",identifier:"reactivetable-verticaltable"}},"tagselector-radio":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(23)]).then(r.bind(null,"2Ovr"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:x}},dependencies:{react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},antd:{version:"^4.0.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},componentName:"TagSelector",identifier:"tagselector-radio"}},"tagselector-checkbox":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(23)]).then(r.bind(null,"gLyx"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:I}},dependencies:{react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},antd:{version:"^4.0.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},componentName:"TagSelector",identifier:"tagselector-checkbox"}},"tagselector-form":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(23)]).then(r.bind(null,"jyQ7"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:S}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"TagSelector",identifier:"tagselector-form"}},"uploadinform-form":{component:Object(l["dynamic"])({loader:function(){var e=Object(d["a"])(Object(s["a"])().mark((function e(){return Object(s["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(0),r.e(5),r.e(4),r.e(20)]).then(r.bind(null,"Vjb2"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:D}},dependencies:{antd:{version:"^4.0.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"ant-design-power":{version:"1.4.3"},"react-dom":{version:">=16.9.0"}},componentName:"UploadInForm",identifier:"uploadinform-form"}}},k=r("x2v5"),P=r("KcUY"),O=r.n(P);n["default"]=e=>i.a.createElement(O.a,Object(t["a"])({},e,{config:o,demos:_,apis:k}))},q3YX:function(e){e.exports=JSON.parse('{"menus":{"en-US":{"/components":[{"title":"\u7ec4\u4ef6","path":"/components","meta":{},"children":[{"path":"/components/countdown-button","title":"CountdownButton \u5012\u8ba1\u65f6\u6309\u94ae","meta":{}},{"path":"/components/editable-tag","title":"EditableTag \u53ef\u7f16\u8f91\u6807\u7b7e","meta":{}},{"path":"/components/editable-tree","title":"EditableTree \u53ef\u7f16\u8f91\u6811","meta":{}},{"path":"/components/modal-detail","title":"ModalDetail \u6a21\u6001\u6846\u8be6\u60c5","meta":{}},{"path":"/components/modal-form","title":"ModalForm \u6a21\u6001\u6846\u8868\u5355","meta":{}},{"path":"/components/quick-range-picker","title":"QuickRangePicker \u5feb\u6377\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668","meta":{}},{"path":"/components/reactive-table","title":"ReactiveTable \u54cd\u5e94\u5f0f\u8868\u683c","meta":{}},{"path":"/components/tag-selector","title":"TagSelector \u6807\u7b7e\u9009\u62e9\u5668","meta":{}},{"path":"/components/upload-in-form","title":"UploadInForm \u6587\u4ef6\u4e0a\u4f20","meta":{}}]}],"*":[{"path":"/","title":"Ant Design Power","meta":{}}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"\u7ec4\u4ef6","path":"/components"},{"title":"GitHub","path":"https://github.com/hwjfqr/ant-design-power"}]},"title":"Ant Design Power","logo":"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg","mode":"site","repository":{"url":"https://github.com/hwjfqr/ant-design-power","branch":"master"},"theme":{}}')},x2v5:function(e){e.exports=JSON.parse('{"CountdownButton":{"default":[{"identifier":"maxSecondNum","description":"\u6700\u5927\u79d2\u6570","type":"number","default":"60"},{"identifier":"txt","description":"\u6309\u94ae\u9ed8\u8ba4\u6587\u672c","type":"string","default":"\u83b7\u53d6\u9a8c\u8bc1\u7801"},{"identifier":"loadingTxt","description":"\u52a0\u8f7d\u65f6\u6309\u94ae\u6587\u672c","type":"string","default":"\u53d1\u9001\u4e2d"},{"identifier":"disabledTxt","description":"\u7981\u7528\u65f6\u6309\u94ae\u6587\u672c","type":"(s: number) => string","default":"(s) => `${s} \u79d2\u540e\u91cd\u8bd5`"},{"identifier":"onClick","description":"\u70b9\u51fb\u6309\u94ae\u65f6\u89e6\u53d1\u7684\u51fd\u6570\uff0c\u5176\u53c2\u6570 completeCallback \u9700\u8981\u5728\u63a5\u53e3\u8bf7\u6c42\u5b8c\u6bd5\u540e\u8c03\u7528\uff0c\u7528\u4e8e\u544a\u77e5\u7ec4\u4ef6\u63a5\u53e3\u8bf7\u6c42\u5df2\u5b8c\u6210\u3002","type":"(completeCallback: () => void) => void","default":"(completeCallback) => {\\r\\n    completeCallback();\\r\\n  }"}]},"EditableTag":{"default":[{"identifier":"value","description":"\u5f53\u524d\u503c","type":"string[]"},{"identifier":"onChange","description":"\u53d8\u5316\u56de\u8c03","type":"(tags: string[]) => void"},{"identifier":"addTxt","description":"\u81ea\u5b9a\u4e49\u6dfb\u52a0\u6587\u672c","type":"string","default":"\u6dfb\u52a0"},{"identifier":"tagProps","description":"\u7528\u4e8e\u6307\u5b9a Tag \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"TagProps"},{"identifier":"inputProps","description":"\u7528\u4e8e\u6307\u5b9a Input \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"InputProps"}]},"EditableTree":{"default":[{"identifier":"treeData","description":"\u6811\u6570\u636e","type":"DataNodeType[]","required":true},{"identifier":"treeEditingMethod","description":"\u53f3\u952e\u83dc\u5355\u9879\u5bf9\u5e94\u7684\u56de\u8c03","type":"TreeEditingMethodType","default":"{}"},{"identifier":"renderRightClickMenuItem","description":"\u81ea\u5b9a\u4e49\u53f3\u952e\u83dc\u5355\u9879","type":"(menu: ReactNode[], nodeInfo: DataNodeType, treeEditingMethod: TreeEditingMethodType) => ReactNode"},{"identifier":"dropdownProps","description":"\u7528\u4e8e\u6307\u5b9a Dropdown \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"DropdownProps"},{"identifier":"menuProps","description":"\u7528\u4e8e\u6307\u5b9a Menu \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"MenuProps"}]},"ModalDetail":{"default":[{"identifier":"title","description":"\u6807\u9898","type":"string","default":"\u8be6\u60c5"},{"identifier":"visible","description":"\u662f\u5426\u53ef\u89c1","type":"boolean","default":"false"},{"identifier":"onClose","description":"\u5173\u95ed\u6a21\u6001\u6846\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6","type":"() => void","required":true},{"identifier":"data","description":"\u9700\u8981\u5c55\u793a\u7684\u8be6\u60c5\u6570\u636e","type":"{ label: string; value?: ReactNode; }[]"},{"identifier":"modalProps","description":"\u7528\u4e8e\u6307\u5b9a Modal \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"ModalProps"},{"identifier":"descriptionsProps","description":"\u7528\u4e8e\u6307\u5b9a Descriptions \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"DescriptionsProps"}]},"ModalForm":{"default":[{"identifier":"title","description":"\u6807\u9898\u3002","type":"string","default":"\u8868\u5355"},{"identifier":"visible","description":"\u662f\u5426\u53ef\u89c1\u3002","type":"boolean","default":"false"},{"identifier":"initialValue","description":"\u521d\u59cb\u503c\u3002","type":"{ [prop: string]: unknown; }"},{"identifier":"idKey","description":"\u4fee\u6539\u72b6\u6001\u65f6\uff0cid \u7684\u5b57\u6bb5\u540d\u79f0\u3002","type":"string","default":"id"},{"identifier":"onClose","description":"Modal \u5173\u95ed\u65f6\u89e6\u53d1\u56de\u8c03\u3002","type":"() => void","required":true},{"identifier":"onSubmit","description":"\u70b9\u51fb\u63d0\u4ea4\u6309\u94ae\u65f6\u89e6\u53d1\u7684\u56de\u8c03\uff0c\u5f53\u56de\u8c03\u8fd4\u56de\u503c\u4e3a true \u65f6\uff0c\u5c06\u89e6\u53d1 onClose \u65b9\u6cd5\u5173\u95ed Modal\u3002","type":"(values: T, isEdit: boolean) => Promise<boolean>","required":true},{"identifier":"onValuesChange","description":"\u5f53\u8868\u5355\u503c\u53d8\u5316\u65f6\u89e6\u53d1\u7684\u56de\u8c03\uff0c\u7528\u4e8e\u5b9e\u73b0\u8868\u5355\u503c\u8054\u52a8\u53d8\u5316\u3002","type":"(value: { [prop: string]: any; }, allValue: T, form: FormInstance<T>) => void"},{"identifier":"modalProps","description":"\u7528\u4e8e\u6307\u5b9a Modal \u7ec4\u4ef6\u76f8\u5173 API \u3002","type":"ModalProps"},{"identifier":"formProps","description":"\u7528\u4e8e\u6307\u5b9a Form \u7ec4\u4ef6\u76f8\u5173 API \u3002","type":"FormProps<any>"}]},"QuickRangePicker":{"default":[{"identifier":"presetTimeRange","description":"\u9884\u8bbe\u65f6\u95f4\u8303\u56f4\\n { [ prop:string ]:[ Moment|Dayjs, Moment|Dayjs ] }","type":"{ [prop: string]: [any, any]; }"},{"identifier":"defaultPresetTime","description":"\u9ed8\u8ba4\u65f6\u95f4\u8303\u56f4","type":"string"}]},"ReactiveTable":{"default":[{"identifier":"type","description":"\u5c55\u793a\u7c7b\u578b","type":"\\"table\\" | \\"list\\"","default":"table"},{"identifier":"fields","description":"\u5c55\u793a\u5b57\u6bb5\uff0c\u89c4\u5219\u4e0e Table \u7ec4\u4ef6\u7684 columns \u5b57\u6bb5\u4e00\u81f4\u3002\\n\u589e\u52a0\u4e86 type \u5b57\u6bb5\u7528\u4e8e\u6807\u8bc6\u5b57\u6bb5\u7c7b\u578b\uff0c\u4fbf\u4e8e\u5728 List \u7ec4\u4ef6\u5c55\u793a\u76f8\u5173\u5b57\u6bb5\uff0c\u5176\u503c\u5982\u4e0b\uff1a\\ntitle - \u6807\u9898\u5b57\u6bb5\uff1binfo - \u4fe1\u606f\u5b57\u6bb5\uff1baction - \u64cd\u4f5c\u5b57\u6bb5\u3002","type":"FieldsType<T>","required":true},{"identifier":"commonProps","description":"Table \u4e0e List \u7ec4\u4ef6\u7684\u516c\u5171\u5b57\u6bb5\uff08rowKey\u3001dataSource\u3001size\u3001loading\u3001pagination \u7b49\uff09","type":"TableProps<T> & ListProps<T>","default":"{}"},{"identifier":"tableProps","description":"Table \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"TableProps<T>","default":"{}"},{"identifier":"verticalTableLayoutConf","description":"\u7528\u4e8e\u542f\u7528\u7eb5\u5411\u8868\u683c\u7684\u76f8\u5173\u914d\u7f6e\uff08\u5177\u4f53\u7528\u6cd5\u8be6\u89c1 Demo\uff09\uff1a\\nmainFieldName\uff1a\u6307\u5b9a\u4e3b\u5b57\u6bb5\u7684\u540d\u79f0\uff1b\\nfirstCellName\uff1a\u6307\u5b9a\u8868\u683c\u5de6\u4e0a\u89d2\u5355\u5143\u683c\u7684\u540d\u79f0\u3002","type":"{ mainFieldName: string; firstCol: ColumnType<T> & { [prop: string]: any; }; }"},{"identifier":"listProps","description":"List \u7ec4\u4ef6\u7684\u5176\u4ed6 API","type":"ListProps<T>","default":"{}"},{"identifier":"infiniteScroll","description":"\u4f7f\u7528 List \u7ec4\u4ef6\u65f6\uff0c\u6eda\u52a8\u52a0\u8f7d\u914d\u7f6e\uff08https://github.com/ankeetmaini/react-infinite-scroll-component\uff09\u3002","type":"Omit<Props, \\"children\\">"},{"identifier":"scrollableDivHeight","description":"\u5f00\u542f\u65e0\u9650\u6eda\u52a8\u65f6\uff0c\u5bb9\u5668\u7684\u9ad8\u5ea6\u3002","type":"string | number","default":"90vh"}]},"TagSelector":{"default":[{"identifier":"tags","description":"\u6807\u7b7e\u6570\u7ec4","type":"{ label: string; value: any; }[]","default":"[]"},{"identifier":"value","description":"\u5f53\u524d\u503c","type":"unknown"},{"identifier":"onChange","description":"\u53d8\u5316\u56de\u8c03","type":"(val: T) => void"},{"identifier":"type","description":"\u6807\u7b7e\u9009\u62e9\u5668\u7c7b\u578b\uff0c\u652f\u6301\u5355\u9009\u6216\u591a\u9009\u3002","type":"\\"radio\\" | \\"checkbox\\"","default":"checkbox"},{"identifier":"displayMaxOptionLength","description":"\u6307\u5b9a\u5f53\u9009\u9879\u8d85\u8fc7\u591a\u5c11\u4e2a\u65f6\uff0c\u63d0\u4f9b\u5c55\u5f00\u6309\u94ae\u5e76\u9690\u85cf\u5269\u4f59\u9009\u9879\u3002\u6307\u5b9a\u4e3a false \uff0c\u8868\u793a\u4e0d\u9690\u85cf\u9009\u9879\u3002","type":"number | boolean","default":"20"},{"identifier":"showAll","description":"\u6307\u5b9a\u662f\u5426\u6dfb\u52a0\u201c\u5168\u90e8\u201d\u9009\u9879","type":"boolean","default":"false"},{"identifier":"allText","description":"\u5168\u90e8\u9009\u9879\u7684\u6587\u6848","type":"string","default":"\u5168\u90e8"},{"identifier":"allValue","description":"\u5168\u90e8\u9009\u9879\u7684\u503c","type":"string","default":"all"}]},"UploadInForm":{"default":[{"identifier":"value","description":"\u503c\uff08\u7531 Form \u63a7\u5236\uff09\uff0c\u683c\u5f0f\u4e3a name\uff08\u6587\u4ef6\u540d\uff09\u3001url\uff08\u6587\u4ef6 URL\uff09\u3002","type":"FileListType"},{"identifier":"onChange","description":"\u4e0a\u4f20\u6587\u4ef6\u6539\u53d8\u65f6\u7684\u56de\u8c03\uff08\u7531 Form \u63a7\u5236\uff09\u3002","type":"((fileList?: FileListType) => void) & ((info: UploadChangeParam<UploadFile<any>>) => void)"},{"identifier":"transform","description":"\u7528\u4e8e\u5c06\u63a5\u6536\u5230\u7684\u6587\u4ef6\u6570\u636e\uff0c\u8f6c\u6362\u4e3a value \u6240\u9002\u914d\u7684\u683c\u5f0f\uff08\u5224\u65ad\u6587\u4ef6\u4e0a\u4f20\u54cd\u5e94\u5185\u5bb9\uff0c\u63d0\u53d6 name \u4e0e url\uff0c\u5e76\u8fd4\u56de\uff09\u3002","type":"(fileList: UploadFile<any>[], info: UploadChangeParam<UploadFile<any>>) => FileListType","required":true},{"identifier":"changedCallback","description":"\u6587\u4ef6\u4e0a\u4f20\u540e\u7684\u56de\u8c03\uff0c\u7528\u4e8e\u6839\u636e\u6587\u4ef6\u4e0a\u4f20\u4fe1\u606f\u6267\u884c\u5176\u4ed6\u903b\u8f91\uff08\u4f8b\u5982\u9519\u8bef\u63d0\u793a\u7b49\uff09\u3002","type":"(info: UploadChangeParam<UploadFile<any>>) => void","default":"(info) => {\\n    if (info.file.status === \'error\') {\\n      message.error(`${info.file.name} \u6587\u4ef6\u4e0a\u4f20\u51fa\u9519`);\\n    }\\n  }"}]}}')}}]);